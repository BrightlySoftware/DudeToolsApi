FORMAT: 1A
HOST: https://v1-dudetools.api.dudesolutions.io

USECOMMONSDKLIBRARY: TRUE
GENERATEASYNCCODE: TRUE
GENERATEINTERFACES: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: FALSE
USECONTROLLERPOSTFIX: FALSE
USEENUMPOSTFIX: FALSE
USECONSTRUCTORSFORCONFIG: TRUE
CSHARPDEFAULTNAMESPACE: DSI.SDK.DudeTools
JAVADEFAULTNAMESPACE: io.dudesolutions.dudetools
BRANDLABEL: Dude Solutions, Inc.
USERAGENT: Dude SDK
NULLIFY404: TRUE
VALIDATEREQUIREDPARAMETERS: FALSE
COLLECTPARAMETERS: TRUE
ARRAYSERIALIZATION: Plain

# DudeTools Api

## Reference
Good reference document: https://raw.githubusercontent.com/apiaryio/api-blueprint/master/examples/Polls%20API.md

## Authentication
*Dude File Api* uses OAuth v2 Authentication. First you create a new (or acquire existing) OAuth v2 token using [DudeAuth](https://www.dudeauth.com/).

New to *OAuth*?  Check out the [OAuth Bible](http://oauthbible.com/) for good reference material.

## Media Types
Where applicable this API uses the *JSON* media-type to represent resources.
Requests and responses with a message-body use plain JSON to set or update resources.

## Error States
Common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used throughout this API.
In addition to standard response codes the response object returned from the server during an exception event may contain additional information in the following JSON format:
{
 "message": "SOME MESSAGE",
 "dudeReferenceId": "3523845A-4729-4CCB-9E16-01DEADF6C2DF",
 "stackTrace": "Null, Typically"
 }

## Data Restriction
Depending on the access level granted to the calling client certain data elements throughout this API will be removed and not returned.

## Dates & Times
All dates and times are represented in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. In addition, *Dude Security Api* will always provide [Coordinated Universal Time](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).
The API is capable of parsing most date and time formats, however we do require UTC dates and times be provided from all calling systems. We highly recommend you utilize the ISO-8601 standard when communicating dates and time to the API as well.

## Known Issues
None at this time

## Documentation Notes
In Progress

# Group System Information
Check API System Information

## S.I. Check [/]
Retrieve api version, vitals, links, etc.

### GET

+ Response 200 (application/json)
    + Attributes (System Information)

# Group Heartbeat
Check health of dependent services

## Heartbeat Check [/heartbeat]
The heartbeat is exposed and provided to check for availability of the service.
Any response that does not provide a ```200 OK``` response code should be treated as an error.

### GET

+ Response 200 (application/json)
+ Headers

        X-Dude-Api-Limit: Unlimited or Number
        X-Dude-Api-Remaining: Unlimited or Number
        X-Dude-Api-Server: Api Server ID
    + Attributes (Heartbeat)

# Group Account Products
Check account products endpoints.

## Account Product Collection [/accounts/{accountId}/products{?page,pagesize,orderby,q,includeAudit}]
This collection allows new account product associations to be created and for products of existing associations to be returned.

+ Parameters
    + accountId: 1234567890 (number, required) - {INT} ID of the account in the form of an integer
    + page: 1 (number, optional) - {INT} The page to request from the collection.
    + pagesize: 1000 (number, optional) - {INT} The number of records to load in a page from the collection.
    + orderby: Quantity asc (string, optional) - A string describing the ordering to perform on the collection.
    + q: Sample (string, optional) - Queries product name containing this value
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
    + Attributes (Base Collection Response)
        + data (required, array[Account Product]) - The Account Product response collection.

## Account Product Create [/accounts/{accountId}/products]
This collection allows new account product associations to be created.

+ Parameters
    + accountId: 1234567890 (number, required) - {INT} ID of the account in the form of an integer

### POST

+ Request (application/json)
    + Attributes (Base Account Product)

+ Response 201 (application/json)
    + Attributes (Account Product)

## Account Product Detail [/accounts/{accountId}/products/{id}{?includeAudit}]
This endpoint allows existing account product associations to be found and returned or removed.

+ Parameters
    + accountId: 1234567890 (number, required) - {INT} ID of the account in the form of an integer
    + id: 12345 (number, required) - {INT} ID of the product in the form of an integer
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### GET

+ Response 200 (application/json)
    + Attributes (Account Product)

### PUT

+ Request (application/json)
    + Attributes (Account Product)

+ Response 201 (application/json)
    + Attributes (Account Product)

# Group Account Users
Account user endpoints.

## Account Users Create [/accounts/{accountId}/users{?includeAudit}]
Create a Dude Platform user for the account.

+ Parameters
    + accountId: 1234567890 (number, required) - {INT} The Dude Platform account the user belongs too.
    + includeAudit: true (boolean, optional) - Flag to return audit information from the api

### POST

+ Request (application/json)
    + Attributes (User Detail)

+ Response 201 (application/json)
    + Attributes (User Activation)

# Data Structures

## System Information (object)
Represents the System Information response.

### Properties
+ `application`: `DudeTools Api` (string, required) - The name of the application.
+ `version` : `1.0.0.0` (string, required) - The assembly version.
+ `apiVersion` : `1.0.0.0` (string, required) - The API version.
+ `vitals` (Heartbeat, required) - The state of the system dependencies.
+ `links` (array[System Links], required) - The API routes.

## System Links (object)
Represents the API routes.

### Properties
+ `endpoint` : `Accounts` (string, required) - The name of the endpoint.
+ `action` : `Get` (string, required) - The REST action.
+ `route` : `/accounts/{accountId}` (string, required) - The route to the endpoint.

## Heartbeat (object)
Represents a heartbeat response.

### Properties
+ `cachevitalcheck`: true (boolean, required) - Vital check to ensure Cache provider is online.
+ `filestoragevitalcheck`: true (boolean, required) - Vital check to ensure file storage provider is online.
+ `filedbvitalcheck`: true (boolean, required) - Vital check to ensure database provider is online.
+ `symantecantivirusprovidervitalcheck`: true (boolean, required) - Vital check to ensure malware provider is online.

## Base Collection Response (object)
Represents a paged response when bulk retrieving from a collection

### Properties
+ `page`: 1 (number, required) - {INT} The current page provided in the response data.
+ `pageSize`: 1000 (number, required) - {INT} The page size returned in the response data.
+ `dataSize`: 1000 (number, required) - {INT} The total records returned in the response.
+ `total`: 2000 (number, required) - {INT} The total number of records available in the collection.

## Base Audit (object)
Represents the audit fields

### Properties
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The date and time in ISO-8601 format the record was created.
+ `createdByUserId`: 1 (number, optional) - {INT} Information about the user who created the record.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The date and time in ISO-8601 format the record was last updated.
+ `updatedByUserId`: 1 (number, optional) - {INT} Information about the user who last modified the record.

## Audit (Base Audit)
Represents the audit fields

### Properties
+ `createdByApiClientId`: 1 (number, optional) - {INT} Information about the client who created the record.
+ `updatedByApiClientId`: 1 (number, optional) - {INT} Information about the client who last modified the record.

## Base Client (object)
Represents the API Client object with base properties.

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID that represents the API client.

## Security Role (object)
Represents a user's role within a given application

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID.
+ `roleName`: Administrator (string, required) - The description for the role

## System Of Record Account (object)
Represents a system of record account.

### Properties
+ `accountNumber`: 1 (number, required) - {INT} The account number for the system of record.
+ `sourceAbbreviation`: SD  (string, required) - The source abbreviation for the system of record (like SD for School Dude or FD for Facility Dude).
+ `accountGarden`: sdgarden (string, required) - The account garden from the system of record.

## Account (Audit)
Represents a Dude Platform account

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID for the account.
+ `name`: Adams Elementary (string, required) - The name of the account.
+ `number`: 10000009 (number, required) - {INT} The number for the account.
+ `contactFirstName`: June (string, optional) - The first name of the contact person.
+ `contactMiddleName`: K. (string, optional) - The middle name of the contact person.
+ `contactLastName`: Aamodt (string, optional) - The last name of the contact person.
+ `contactPhoneNumber`: 9194603431 (string, optional) - The phone number for the contact person.
+ `contactEmailAddress`: jaamodt@dudesolutions.io (string, optional) - The email address for the contact person.
+ `location` (Location, required) - The location for the account.
+ `market` (Market, required) - The market for the account.
+ `timeZone`: America/New_York (string, required) - The time zone for the account.
+ `systemOfRecordAccount` (System Of Record Account, optional) - The system of record account.
+ `assets` (Product, required) - The collection of assets the account owns.

## Permission (object)
Represents the individual privileges that allow specific access to the platform

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID.
+ `name`: WorkOrderCreate (string, required) - The key for the permission

## Location (object)
Represents a geo-location point.

### Properties
+ `latitude`: 35.529051 (number, optional) - The latitude for the location.
+ `longitude`: 77.401076 (number, optional) - The longitude of the location.
+ `streetAddress`: PO BOX 1489 (string, optional) - The street address for the location.
+ `streetAddressLine2` (string, optional) - The second, optional line for street address for the location.
+ `city`: WINTERVILLE (string, required) - The city for the location.
+ `region`: NC (string, required) - The region for the location.
+ `postalCode`: 28590-1489 (string, required) - The postal code for the location.
+ `country`: USA (string, required) - The country for the location.

## Market (Base Audit)
Represents a market.

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID for the market.
+ `name`: MFG (string, required) - The name of the market.
+ `marketDescription`: Manufacturing (string, required) - The description for the market.

## Product (object)
Represents a product.

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID for the product.
+ `name`: Maintenance MVP (string, required) - The name of the product.
+ `url`: https://mvp.facilitydude.com (string, required) - The url for the product.

## Base Account Product (object)
Represents a product account association with base properties.

### Properties
+ `account` (Account, required) - The account.
+ `asset` (Product, required) - The product.
+ `contact` (Base User, optional) - The main contact for the product.
+ `startDateTime` (string, optional) - {DATETIME} The UTC start date and time.
+ `endDateTime` (string, optional) - {DATETIME} The UTC end date and time.

## Account Product (Base Account Product)
Represents a product account association

### Properties
+ `createdByUser` (Base User, optional) - The user who created the object.
+ `createdDateTime` (string, optional) - {DATETIME} The UTC date and time the object was created.
+ `createdByApiClient` (Base Client, required) - The API Client who created the object.
+ `updatedByUser` (Base User, optional) - The user who last updated the object.
+ `updatedDateTime` (string, optional) - {DATETIME} The UTC date and time the object was last updated.
+ `updatedByApiClient` (Base Client, required) - The API Client that last updated the object.

## Base User (object)
Represents a user with base properties.

### Properties
+ `id`: 1 (number, required) - {INT} The unique ID that represents the user.
+ `firstName`: John (string, required) - The first name of the user.
+ `lastName`: Smith (string, required) - The last name of the user.
+ `email`: john.smith@dudesolutions.io (string, required) - The email of the user.

## User (Base User)
Represents a user with properties included.

### Properties
+ `hourlyRate`: 25.50 (number, optional) - The hourly Rate
+ `roles` (array[Security Role], required) - The collection of roles associated with the user.  When authenticating against an application, only the roles for the user in the context of that application will be returned.
+ `isActivated`: true (boolean, required) - Indicates if a user has been activated within the platform
+ `isEnabled`: true (boolean, required) - Indicates if the user is able to login to the platform

## User Detail (User)
Represents a user with all properties included.

### Properties
+ `account` (Account, required) - The account that the user is associated with
+ `permissions` (array[Permission], required) - The list of permissions available to the user based on the current role set.
+ `createdByUser` (Base User, optional) - The user who created the object.
+ `createdDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The UTC date and time the object was created.
+ `createdByApiClient` (Base Client, required) - The API Client who created the object.
+ `updatedByUser` (Base User, optional) - The user who last updated the object.
+ `updatedDateTime`: `2015-01-01T00:00:00.123Z` (string, optional) - {DATETIME} The UTC date and time the object was last updated.
+ `updatedByApiClient` (Base Client, required) - The API Client that last updated the object.

## User Activation (User Detail)
Represents a user with all properties (including activation info).

### Properties
+ `activationToken`: 721wus922isoa281WDH1 (string, required) - The token that is needed to activate the user
+ `activationExpires`: `2015-01-01T00:00:00.123Z` (string, required) - The time at which the activation token will expire
+ `activationCompleted`: `2015-01-01T00:00:00.123Z` (string, required) - The date the activation process was completed
